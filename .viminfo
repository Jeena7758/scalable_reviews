# This viminfo file was generated by Vim 9.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/method

# Command Line History (newest to oldest):
:wq!
|2,0,1751497028,,"wq!"
:q
|2,0,1751496876,,"q"
:q!
|2,0,1751495309,,"q!"
:wq1
|2,0,1751386587,,"wq1"
:950
|2,0,1751149172,,"950"
:set nu
|2,0,1751149168,,"set nu"
:Q
|2,0,1751046366,,"Q"

# Search String History (newest to oldest):
?/method
|2,1,1751494842,47,"method"
?/sentiment_counts
|2,1,1751493772,47,"sentiment_counts"
?/total_cate
|2,1,1751493520,47,"total_cate"
?/sentiment counts
|2,1,1751493506,47,"sentiment counts"
?/stream
|2,1,1751492950,47,"stream"
?/senti
|2,1,1751490752,47,"senti"
?/total_
|2,1,1751490617,47,"total_"
?/total_cat
|2,1,1751490611,47,"total_cat"
?/total_records_processed
|2,1,1751461739,47,"total_records_processed"
?/message.max.bytes
|2,1,1751450409,47,"message.max.bytes"
?/message.max
|2,1,1751450397,47,"message.max"
?/message_max
|2,1,1751450388,47,"message_max"
?/socket.request.max.bytes
|2,1,1751450322,47,"socket.request.max.bytes"
?/messages_to_p
|2,1,1751408127,47,"messages_to_p"
?/chunk
|2,1,1751407299,47,"chunk"
?/chunksize
|2,1,1751407140,47,"chunksize"
?/consumer
|2,1,1751406922,47,"consumer"
?/zookeeper.con
|2,1,1751405586,47,"zookeeper.con"
?/listeners
|2,1,1751405383,47,"listeners"
?/batch_size
|2,1,1751403291,47,"batch_size"
?/KafkaServer id
|2,1,1751383186,47,"KafkaServer id"
?/INFO [KafkaServer id=0] started
|2,1,1751382970,47,"INFO [KafkaServer id=0] started"
?/INFO Registered broker 0 with zookeeper
|2,1,1751382959,47,"INFO Registered broker 0 with zookeeper"
?/linger
|2,1,1751368150,47,"linger"
?/batch
|2,1,1751367988,47,"batch"
?/timeouti
|2,1,1751325933,47,"timeouti"
?/Reading
|2,1,1751324611,47,"Reading"
?/hread {os.getpid()}: Reading
|2,1,1751324544,47,"hread {os.getpid()}: Reading"
?/reading
|2,1,1751324500,47,"reading"
?/pid
|2,1,1751324474,47,"pid"
?/read {os.getpid()}: Reading
|2,1,1751324414,47,"read {os.getpid()}: Reading"
?/current_thread
|2,1,1751324305,47,"current_thread"
?/getpid
|2,1,1751324057,47,"getpid"
?/thread.pid
|2,1,1751323990,47,"thread.pid"
?/producer.se
|2,1,1751323729,47,"producer.se"
?/id
|2,1,1751323049,47,"id"
?/nltk
|2,1,1751322803,47,"nltk"
?/offset
|2,1,1751111011,47,"offset"
?/duration_sec
|2,1,1750976843,47,"duration_sec"
?/time.time() - 
|2,1,1750974590,47,"time.time() - "
?/total_reviews
|2,1,1750972148,47,"total_reviews"
?/metric
|2,1,1750972105,47,"metric"
?/BATCH_THREAD_SIZE
|2,1,1750971773,47,"BATCH_THREAD_SIZE"
?/raw_batch
|2,1,1750971736,47,"raw_batch"
?/executor
|2,1,1750971673,47,"executor"
?/features
|2,1,1750971662,47,"features"
?/poll
|2,1,1750971621,47,"poll"
?/THREAD
|2,1,1750971479,47,"THREAD"
?/clear
|2,1,1750968705,47,"clear"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"2	LINE	0
	import os
	import json
	import glob
	import boto3
	import matplotlib.pyplot as plt
	import numpy as np
	from collections import Counter
	from wordcloud import WordCloud
	
	# --- Config ---
	SUMMARY_DIR = './graph_summaries'
	GRAPH_OUTPUT_PREFIX = 'graph_outputs'
	S3_BUCKET = 'imdbreviews-scalable'
	S3_SUMMARY_PREFIX = 'summaries/'
	
	os.makedirs(SUMMARY_DIR, exist_ok=True)
	
	# --- S3 download ---
	def download_summaries_from_s3():
	    s3 = boto3.client('s3')
	    paginator = s3.get_paginator('list_objects_v2')
	    print(f"Downloading summary files from s3://{S3_BUCKET}/{S3_SUMMARY_PREFIX}")
	    for page in paginator.paginate(Bucket=S3_BUCKET, Prefix=S3_SUMMARY_PREFIX):
	        for obj in page.get('Contents', []):
	            key = obj['Key']
	            if key.endswith('.json'):
	                filename = os.path.basename(key)
	                local_path = os.path.join(SUMMARY_DIR, filename)
	                s3.download_file(S3_BUCKET, key, local_path)
	                print(f"Downloaded: {filename}")
	
	# --- Upload to S3 ---
	def upload_to_s3(file):
	    s3 = boto3.client('s3')
	    s3_path = f"{GRAPH_OUTPUT_PREFIX}/{os.path.basename(file)}"
	    s3.upload_file(file, S3_BUCKET, s3_path)
	    print(f"Uploaded to S3: s3://{S3_BUCKET}/{s3_path}")
	
	# --- Parse summaries ---
	def parse_summary_files():
	    grouped_data = {}
	    sentiment_data = Counter()
	    word_freq = Counter()
	    movie_sentiments = {}
	
	    for filepath in sorted(glob.glob(os.path.join(SUMMARY_DIR, '*.json'))):
	        try:
	            with open(filepath, 'r') as f:
	                summary = json.load(f)
	
|3,0,2,1,50,0,1751495775,"import os","import json","import glob","import boto3","import matplotlib.pyplot as plt","import numpy as np","from collections import Counter","from wordcloud import WordCloud","","# --- Config ---","SUMMARY_DIR = './graph_summaries'","GRAPH_OUTPUT_PREFIX = 'graph_outputs'","S3_BUCKET = 'imdbreviews-scalable'","S3_SUMMARY_PREFIX = 'summaries/'","","os.makedirs(SUMMARY_DIR, exist_ok=True)","","# --- S3 download ---",>35
|<"def download_summaries_from_s3():","    s3 = boto3.client('s3')","    paginator = s3.get_paginator('list_objects_v2')","    print(f\"Downloading summary files from s3://{S3_BUCKET}/{S3_SUMMARY_PREFIX}\")","    for page in paginator.paginate(Bucket=S3_BUCKET, Prefix=S3_SUMMARY_PREFIX):","        for obj in page.get('Contents', []):","            key = obj['Key']","            if key.endswith('.json'):","                filename = os.path.basename(key)",>66
|<"                local_path = os.path.join(SUMMARY_DIR, filename)","                s3.download_file(S3_BUCKET, key, local_path)","                print(f\"Downloaded: {filename}\")","","# --- Upload to S3 ---","def upload_to_s3(file):","    s3 = boto3.client('s3')","    s3_path = f\"{GRAPH_OUTPUT_PREFIX}/{os.path.basename(file)}\"","    s3.upload_file(file, S3_BUCKET, s3_path)","    print(f\"Uploaded to S3: s3://{S3_BUCKET}/{s3_path}\")","","# --- Parse summaries ---",>28
|<"def parse_summary_files():","    grouped_data = {}","    sentiment_data = Counter()","    word_freq = Counter()","    movie_sentiments = {}","","    for filepath in sorted(glob.glob(os.path.join(SUMMARY_DIR, '*.json'))):","        try:","            with open(filepath, 'r') as f:","                summary = json.load(f)",""
"3	LINE	0
	import os
	import json
	import glob
	import boto3
	import matplotlib.pyplot as plt
	import numpy as np
	from collections import Counter
	from wordcloud import WordCloud
	
	# --- Config ---
	SUMMARY_DIR = './graph_summaries'
	GRAPH_OUTPUT_PREFIX = 'graph_outputs'
	S3_BUCKET = 'imdbreviews-scalable'
	S3_SUMMARY_PREFIX = 'summaries/'
	
	os.makedirs(SUMMARY_DIR, exist_ok=True)
	
	# --- S3 download ---
	def download_summaries_from_s3():
	    s3 = boto3.client('s3')
	    paginator = s3.get_paginator('list_objects_v2')
	    print(f"Downloading summary files from s3://{S3_BUCKET}/{S3_SUMMARY_PREFIX}")
	    for page in paginator.paginate(Bucket=S3_BUCKET, Prefix=S3_SUMMARY_PREFIX):
	        for obj in page.get('Contents', []):
	            key = obj['Key']
	            if key.endswith('.json'):
	                filename = os.path.basename(key)
	                local_path = os.path.join(SUMMARY_DIR, filename)
	                s3.download_file(S3_BUCKET, key, local_path)
	                print(f"Downloaded: {filename}")
	
	# --- Upload to S3 ---
	def upload_to_s3(file):
	    s3 = boto3.client('s3')
	    s3_path = f"{GRAPH_OUTPUT_PREFIX}/{os.path.basename(file)}"
	    s3.upload_file(file, S3_BUCKET, s3_path)
	    print(f"Uploaded to S3: s3://{S3_BUCKET}/{s3_path}")
	
	# --- Parse summaries ---
	def parse_summary_files():
	    grouped_data = {}
	    sentiment_data = Counter()
	    word_freq = Counter()
	    movie_sentiments = {}
	
	    for filepath in sorted(glob.glob(os.path.join(SUMMARY_DIR, '*.json'))):
	        try:
	            with open(filepath, 'r') as f:
	                summary = json.load(f)
	
|3,0,3,1,50,0,1751495775,"import os","import json","import glob","import boto3","import matplotlib.pyplot as plt","import numpy as np","from collections import Counter","from wordcloud import WordCloud","","# --- Config ---","SUMMARY_DIR = './graph_summaries'","GRAPH_OUTPUT_PREFIX = 'graph_outputs'","S3_BUCKET = 'imdbreviews-scalable'","S3_SUMMARY_PREFIX = 'summaries/'","","os.makedirs(SUMMARY_DIR, exist_ok=True)","","# --- S3 download ---",>35
|<"def download_summaries_from_s3():","    s3 = boto3.client('s3')","    paginator = s3.get_paginator('list_objects_v2')","    print(f\"Downloading summary files from s3://{S3_BUCKET}/{S3_SUMMARY_PREFIX}\")","    for page in paginator.paginate(Bucket=S3_BUCKET, Prefix=S3_SUMMARY_PREFIX):","        for obj in page.get('Contents', []):","            key = obj['Key']","            if key.endswith('.json'):","                filename = os.path.basename(key)",>66
|<"                local_path = os.path.join(SUMMARY_DIR, filename)","                s3.download_file(S3_BUCKET, key, local_path)","                print(f\"Downloaded: {filename}\")","","# --- Upload to S3 ---","def upload_to_s3(file):","    s3 = boto3.client('s3')","    s3_path = f\"{GRAPH_OUTPUT_PREFIX}/{os.path.basename(file)}\"","    s3.upload_file(file, S3_BUCKET, s3_path)","    print(f\"Uploaded to S3: s3://{S3_BUCKET}/{s3_path}\")","","# --- Parse summaries ---",>28
|<"def parse_summary_files():","    grouped_data = {}","    sentiment_data = Counter()","    word_freq = Counter()","    movie_sentiments = {}","","    for filepath in sorted(glob.glob(os.path.join(SUMMARY_DIR, '*.json'))):","        try:","            with open(filepath, 'r') as f:","                summary = json.load(f)",""
"4	LINE	0
	import os
	import json
	import glob
	import boto3
	import matplotlib.pyplot as plt
	import numpy as np
	from collections import Counter
	from wordcloud import WordCloud
	
	# --- Config ---
	SUMMARY_DIR = './graph_summaries'
	GRAPH_OUTPUT_PREFIX = 'graph_outputs'
	S3_BUCKET = 'imdbreviews-scalable'
	S3_SUMMARY_PREFIX = 'summaries/'
	
	os.makedirs(SUMMARY_DIR, exist_ok=True)
	
	# --- S3 download ---
	def download_summaries_from_s3():
	    s3 = boto3.client('s3')
	    paginator = s3.get_paginator('list_objects_v2')
	    print(f"Downloading summary files from s3://{S3_BUCKET}/{S3_SUMMARY_PREFIX}")
	    for page in paginator.paginate(Bucket=S3_BUCKET, Prefix=S3_SUMMARY_PREFIX):
	        for obj in page.get('Contents', []):
	            key = obj['Key']
	            if key.endswith('.json'):
	                filename = os.path.basename(key)
	                local_path = os.path.join(SUMMARY_DIR, filename)
	                s3.download_file(S3_BUCKET, key, local_path)
	                print(f"Downloaded: {filename}")
	
	# --- Upload to S3 ---
	def upload_to_s3(file):
	    s3 = boto3.client('s3')
	    s3_path = f"{GRAPH_OUTPUT_PREFIX}/{os.path.basename(file)}"
	    s3.upload_file(file, S3_BUCKET, s3_path)
	    print(f"Uploaded to S3: s3://{S3_BUCKET}/{s3_path}")
	
	# --- Parse summaries ---
	def parse_summary_files():
	    grouped_data = {}
	    sentiment_data = Counter()
	    word_freq = Counter()
	    movie_sentiments = {}
	
	    for filepath in sorted(glob.glob(os.path.join(SUMMARY_DIR, '*.json'))):
	        try:
	            with open(filepath, 'r') as f:
	                summary = json.load(f)
	
|3,0,4,1,50,0,1751495775,"import os","import json","import glob","import boto3","import matplotlib.pyplot as plt","import numpy as np","from collections import Counter","from wordcloud import WordCloud","","# --- Config ---","SUMMARY_DIR = './graph_summaries'","GRAPH_OUTPUT_PREFIX = 'graph_outputs'","S3_BUCKET = 'imdbreviews-scalable'","S3_SUMMARY_PREFIX = 'summaries/'","","os.makedirs(SUMMARY_DIR, exist_ok=True)","","# --- S3 download ---",>35
|<"def download_summaries_from_s3():","    s3 = boto3.client('s3')","    paginator = s3.get_paginator('list_objects_v2')","    print(f\"Downloading summary files from s3://{S3_BUCKET}/{S3_SUMMARY_PREFIX}\")","    for page in paginator.paginate(Bucket=S3_BUCKET, Prefix=S3_SUMMARY_PREFIX):","        for obj in page.get('Contents', []):","            key = obj['Key']","            if key.endswith('.json'):","                filename = os.path.basename(key)",>66
|<"                local_path = os.path.join(SUMMARY_DIR, filename)","                s3.download_file(S3_BUCKET, key, local_path)","                print(f\"Downloaded: {filename}\")","","# --- Upload to S3 ---","def upload_to_s3(file):","    s3 = boto3.client('s3')","    s3_path = f\"{GRAPH_OUTPUT_PREFIX}/{os.path.basename(file)}\"","    s3.upload_file(file, S3_BUCKET, s3_path)","    print(f\"Uploaded to S3: s3://{S3_BUCKET}/{s3_path}\")","","# --- Parse summaries ---",>28
|<"def parse_summary_files():","    grouped_data = {}","    sentiment_data = Counter()","    word_freq = Counter()","    movie_sentiments = {}","","    for filepath in sorted(glob.glob(os.path.join(SUMMARY_DIR, '*.json'))):","        try:","            with open(filepath, 'r') as f:","                summary = json.load(f)",""
"5	LINE	0
	            time_val.append(total_time)
|3,0,5,1,1,0,1751495579,"            time_val.append(total_time)"
"6	LINE	0
	            latency.append(latency)
|3,0,6,1,1,0,1751495578,"            latency.append(latency)"
"7	LINE	0
	            throughput.append(throughput)
|3,0,7,1,1,0,1751495578,"            throughput.append(throughput)"
"8	LINE	0
	            
|3,0,8,1,1,0,1751495577,"            "
"9	LINE	0
	            total_time = next((v for k, v in data.items() if 'time' in k.lower() or 'duration' in k.lower()), 0)
|3,0,9,1,1,0,1751495566,"            total_time = next((v for k, v in data.items() if 'time' in k.lower() or 'duration' in k.lower()), 0)"
"-	CHAR	0
	'
|3,0,36,0,1,0,1751326969,"'"

# File marks:
'0  318  49  ~/visualization.py
|4,48,318,49,1751497028,"~/visualization.py"
'1  1  49  ~/visualization.py
|4,49,1,49,1751496876,"~/visualization.py"
'2  290  49  ~/visualization.py
|4,50,290,49,1751496876,"~/visualization.py"
'3  1  49  ~/visualization.py
|4,51,1,49,1751496397,"~/visualization.py"
'4  290  49  ~/visualization.py
|4,52,290,49,1751496397,"~/visualization.py"
'5  1  49  ~/visualization.py
|4,53,1,49,1751496190,"~/visualization.py"
'6  400  49  ~/visualization.py
|4,54,400,49,1751496190,"~/visualization.py"
'7  1  49  ~/visualization.py
|4,55,1,49,1751496190,"~/visualization.py"
'8  400  49  ~/visualization.py
|4,56,400,49,1751496190,"~/visualization.py"
'9  1  49  ~/visualization.py
|4,57,1,49,1751496190,"~/visualization.py"

# Jumplist (newest first):
-'  318  49  ~/visualization.py
|4,39,318,49,1751497028,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751497024,"~/visualization.py"
-'  290  49  ~/visualization.py
|4,39,290,49,1751496876,"~/visualization.py"
-'  290  49  ~/visualization.py
|4,39,290,49,1751496397,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751496391,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751496391,"~/visualization.py"
-'  400  49  ~/visualization.py
|4,39,400,49,1751496190,"~/visualization.py"
-'  373  49  ~/visualization.py
|4,39,373,49,1751496190,"~/visualization.py"
-'  373  49  ~/visualization.py
|4,39,373,49,1751496190,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751496184,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751496010,"~/visualization.py"
-'  256  4  ~/visualization.py
|4,39,256,4,1751495995,"~/visualization.py"
-'  256  4  ~/visualization.py
|4,39,256,4,1751495995,"~/visualization.py"
-'  256  4  ~/visualization.py
|4,39,256,4,1751495935,"~/visualization.py"
-'  256  31  ~/visualization.py
|4,39,256,31,1751495780,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751495775,"~/visualization.py"
-'  1  0  ~/visualization.py
|4,39,1,0,1751495775,"~/visualization.py"
-'  76  0  ~/visualization.py
|4,39,76,0,1751495603,"~/visualization.py"
-'  76  0  ~/visualization.py
|4,39,76,0,1751495603,"~/visualization.py"
-'  76  0  ~/visualization.py
|4,39,76,0,1751495603,"~/visualization.py"
-'  76  0  ~/visualization.py
|4,39,76,0,1751495603,"~/visualization.py"
-'  73  0  ~/visualization.py
|4,39,73,0,1751495423,"~/visualization.py"
-'  73  0  ~/visualization.py
|4,39,73,0,1751495423,"~/visualization.py"
-'  73  0  ~/visualization.py
|4,39,73,0,1751495423,"~/visualization.py"
-'  73  0  ~/visualization.py
|4,39,73,0,1751495423,"~/visualization.py"
-'  81  0  ~/visualization.py
|4,39,81,0,1751495406,"~/visualization.py"
-'  81  0  ~/visualization.py
|4,39,81,0,1751495406,"~/visualization.py"
-'  81  0  ~/visualization.py
|4,39,81,0,1751495406,"~/visualization.py"
-'  81  0  ~/visualization.py
|4,39,81,0,1751495406,"~/visualization.py"
-'  72  12  ~/visualization.py
|4,39,72,12,1751495310,"~/visualization.py"
-'  72  12  ~/visualization.py
|4,39,72,12,1751495310,"~/visualization.py"
-'  72  12  ~/visualization.py
|4,39,72,12,1751495310,"~/visualization.py"
-'  72  12  ~/visualization.py
|4,39,72,12,1751495310,"~/visualization.py"
-'  73  12  ~/visualization.py
|4,39,73,12,1751495310,"~/visualization.py"
-'  73  12  ~/visualization.py
|4,39,73,12,1751495309,"~/visualization.py"
-'  76  121  ~/visualization.py
|4,39,76,121,1751495220,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495101,"~/visualization.py"
-'  62  0  ~/visualization.py
|4,39,62,0,1751495039,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  51  0  ~/visualization.py
|4,39,51,0,1751494971,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  52  0  ~/visualization.py
|4,39,52,0,1751494970,"~/visualization.py"
-'  51  45  ~/visualization.py
|4,39,51,45,1751494950,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  57  45  ~/visualization.py
|4,39,57,45,1751494904,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  60  15  ~/visualization.py
|4,39,60,15,1751494884,"~/visualization.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"
-'  112  27  ~/imdb_summary.py
|4,39,112,27,1751494850,"~/imdb_summary.py"

# History of marks within files (newest to oldest):

> ~/visualization.py
	*	1751497026	0
	"	318	49
	^	318	50
	.	318	49
	+	1	9
	+	1	7
	+	1	16
	+	1	7
	+	1	0
	+	1	59
	+	1	7
	+	1	0
	+	1	9
	+	1	39
	+	1	9
	+	1	11
	+	1	9
	+	1	92
	+	1	9
	+	1	46
	+	1	0
	+	1	21
	+	1	0
	+	1	21
	+	1	15
	+	1	11
	+	1	16
	+	1	45
	+	1	91
	+	1	21
	+	1	11
	+	1	7
	+	1	11
	+	1	15
	+	1	11
	+	1	110
	+	1	122
	+	1	11
	+	1	12
	+	1	19
	+	1	18
	+	1	22
	+	1	12
	+	1	0
	+	1	119
	+	1	9
	+	318	49

> ~/imdb_summary.py
	*	1751494849	0
	"	112	27
	^	112	28
	.	112	28
	+	1	23
	+	1	67
	+	1	66
	+	1	0
	+	1	49
	+	1	67
	+	1	0
	+	1	92
	+	1	12
	+	1	23
	+	1	13
	+	1	12
	+	1	23
	+	1	16
	+	1	18
	+	1	10
	+	1	0
	+	1	12
	+	1	18
	+	1	12
	+	1	23
	+	1	12
	+	1	23
	+	1	12
	+	1	23
	+	1	12
	+	146	23
	+	112	28

> ~/.gitignore
	*	1751486929	0
	"	14	11
	^	14	12
	.	14	11
	+	6	41
	+	4	0
	+	7	4
	+	4	0
	+	6	11
	+	8	17
	+	10	7
	+	11	20
	+	12	5
	+	13	13
	+	14	11

> ~/1
	*	1751486477	0
	"	1	0

> ~/imdb_consumer_kafka.py
	*	1751486443	0
	"	267	0
	^	267	10
	.	267	9
	+	1	9
	+	1	10
	+	1	0
	+	1	9
	+	1	10
	+	1	20
	+	1	9
	+	1	10
	+	1	15
	+	1	34
	+	1	38
	+	1	14
	+	1	38
	+	1	64
	+	1	23
	+	1	50
	+	1	9
	+	1	25
	+	1	20
	+	1	12
	+	1	11
	+	1	12
	+	1	9
	+	1	11
	+	1	57
	+	1	63
	+	1	14
	+	1	0
	+	1	9
	+	1	0
	+	1	64
	+	1	9
	+	267	9

> ~/mapreduce_hashtag.py
	*	1751486210	0
	"	12	0
	^	12	31
	.	12	30
	+	1	12
	+	1	11
	+	1	12
	+	1	32
	+	1	21
	+	1	0
	+	1	29
	+	1	19
	+	1	9
	+	1	19
	+	1	0
	+	1	18
	+	1	13
	+	1	18
	+	1	96
	+	1	0
	+	1	12
	+	1	32
	+	1	21
	+	1	59
	+	1	4
	+	1	73
	+	1	22
	+	1	11
	+	1	22
	+	1	11
	+	1	12
	+	1	13
	+	1	14
	+	1	12
	+	1	14
	+	1	13
	+	1	12
	+	1	48
	+	1	54
	+	1	39
	+	1	22
	+	1	6
	+	1	53
	+	1	83
	+	1	34
	+	1	10
	+	1	2
	+	1	16
	+	1	18
	+	1	5
	+	1	12
	+	137	53
	+	12	30

> ~/mapreduce_hashtag
	*	1751486205	0
	"	1	0

> ~/cleaning.py
	*	1751466777	0
	"	36	4
	^	112	47
	.	112	46
	+	112	46

> ~/file_cleaning.py
	*	1751466748	0
	"	129	30
	^	11	31
	.	11	30
	+	1	7
	+	1	90
	+	1	32
	+	1	25
	+	1	12
	+	130	18
	+	6	0
	+	4	10
	+	5	9
	+	4	10
	+	11	30

> ~/producer2.py
	*	1751456949	0
	"	1	0
	^	103	0
	.	102	89
	+	1	12
	+	1	0
	+	1	32
	+	1	12
	+	102	89

> ~/kafka_2.13-3.7.0/config/server.properties
	*	1751450435	0
	"	59	26
	^	59	27
	.	59	26
	+	38	45
	+	34	36
	+	35	45
	+	58	33
	+	59	26

> ~/kafka_2.13-3.7.0/logs/server.log
	*	1751450289	0
	"	1268	0
	^	1268	1

> ~/producer.py
	*	1751448605	0
	"	101	27
	^	101	28
	.	101	27
	+	142	9
	+	14	37
	+	15	29
	+	14	39
	+	12	18
	+	11	35
	+	29	37
	+	124	12
	+	65	27
	+	121	96
	+	122	56
	+	124	0
	+	65	8
	+	101	27

> ~/consumer.py
	*	1751444708	0
	"	1	0
	^	1	0

> ~/imdb_consumer_kafka_new.py
	*	1751408160	0
	"	263	0
	^	169	99
	.	169	99
	+	643	63
	+	585	22
	+	1	21
	+	1	0
	+	1	27
	+	1	0
	+	1	36
	+	1	0
	+	1	9
	+	1	21
	+	1	9
	+	262	10
	+	26	13
	+	20	30
	+	18	31
	+	19	22
	+	128	4
	+	135	0
	+	134	46
	+	129	7
	+	130	7
	+	131	7
	+	132	7
	+	133	7
	+	169	99

> ~/imdb_producer_s3.py
	*	1751407503	0
	"	29	50
	^	29	51
	.	132	96
	+	1	83
	+	1	12
	+	1	94
	+	1	14
	+	1	11
	+	1	12
	+	1	11
	+	1	16
	+	1	1
	+	1	20
	+	1	2
	+	1	12
	+	1	90
	+	1	12
	+	203	0
	+	1	12
	+	1	90
	+	1	29
	+	1	25
	+	1	28
	+	1	16
	+	1	12
	+	1	18
	+	1	19
	+	1	0
	+	1	95
	+	1	44
	+	1	61
	+	1	94
	+	1	15
	+	1	24
	+	1	7
	+	1	77
	+	1	15
	+	1	44
	+	1	45
	+	1	53
	+	1	25
	+	1	0
	+	1	1
	+	1	12
	+	1	14
	+	1	24
	+	1	11
	+	1	12
	+	1	11
	+	1	16
	+	1	20
	+	1	25
	+	1	26
	+	1	32
	+	1	9
	+	1	67
	+	1	18
	+	1	16
	+	1	31
	+	1	27
	+	1	16
	+	1	12
	+	1	93
	+	1	32
	+	1	25
	+	1	20
	+	1	16
	+	1	11
	+	1	12
	+	1	11
	+	1	24
	+	1	12
	+	132	96

> ~/seq_hashtag.py
	*	1751329022	0
	"	159	37
	^	159	38
	.	159	37
	+	1	14
	+	1	12
	+	1	81
	+	1	0
	+	1	12
	+	1	31
	+	1	19
	+	1	0
	+	1	12
	+	159	37

> ~/seq_sentiment.py
	*	1751328480	0
	"	20	19
	^	20	20
	.	20	20
	+	1	14
	+	1	9
	+	1	78
	+	1	0
	+	1	9
	+	224	37
	+	20	20

> ~/seq_wordcount.py
	*	1751327918	0
	"	8	19
	^	8	20
	.	8	19
	+	1	12
	+	1	32
	+	1	0
	+	1	12
	+	139	31
	+	125	13
	+	117	13
	+	108	11
	+	102	11
	+	100	12
	+	98	11
	+	90	14
	+	32	16
	+	35	15
	+	8	19

> ~/mapreduce_sentiment_new.py
	*	1751322803	0
	"	220	4
	^	16	20
	.	16	19
	+	1	84
	+	1	0
	+	1	9
	+	1	84
	+	1	9
	+	220	18
	+	16	19

> ~/mapreduce_hashtag_new.py
	*	1751321179	0
	"	1	0
	.	26	0
	+	213	18
	+	18	35
	+	21	0
	+	26	0

> ~/mapreduce_wordcount_new.py
	*	1751320191	0
	"	41	25
	^	18	26
	.	18	25
	+	227	56
	+	1	8
	+	18	25

> ~/file_split.py
	*	1751319593	0
	"	8	31
	^	8	32
	.	8	31
	+	34	41
	+	8	31

> ~/mapreduce_sentiment.py
	*	1751290861	0
	"	13	24
	^	13	25
	.	13	24
	+	1	12
	+	1	11
	+	1	82
	+	1	21
	+	1	0
	+	1	22
	+	1	0
	+	1	10
	+	1	14
	+	1	11
	+	1	72
	+	1	11
	+	1	12
	+	1	14
	+	1	12
	+	1	14
	+	1	12
	+	1	14
	+	1	12
	+	1	11
	+	1	12
	+	1	11
	+	1	12
	+	1	14
	+	1	12
	+	1	11
	+	1	12
	+	1	11
	+	1	20
	+	1	12
	+	1	14
	+	1	12
	+	1	11
	+	1	12
	+	1	11
	+	1	21
	+	1	12
	+	1	14
	+	1	11
	+	1	16
	+	1	12
	+	1	14
	+	1	12
	+	1	11
	+	1	9
	+	1	12
	+	1	14
	+	1	12
	+	1	9
	+	1	12
	+	1	9
	+	1	12
	+	1	14
	+	1	13
	+	1	12
	+	1	11
	+	1	12
	+	1	9
	+	1	12
	+	1	11
	+	1	12
	+	1	11
	+	1	9
	+	1	12
	+	1	11
	+	1	12
	+	1	11
	+	1	12
	+	1	71
	+	1	9
	+	1	78
	+	1	16
	+	1	44
	+	1	0
	+	1	27
	+	1	34
	+	1	43
	+	1	45
	+	1	23
	+	1	37
	+	1	52
	+	1	0
	+	1	34
	+	1	73
	+	1	55
	+	1	6
	+	1	0
	+	1	34
	+	1	72
	+	1	5
	+	1	90
	+	1	59
	+	1	16
	+	1	18
	+	1	9
	+	130	47
	+	15	30
	+	13	24

> ~/mapreduce_wordcount.py
	*	1751227356	0
	"	133	0
	^	11	40
	.	11	39
	+	1	12
	+	1	33
	+	1	71
	+	1	22
	+	1	0
	+	1	11
	+	1	12
	+	1	14
	+	1	12
	+	1	13
	+	1	12
	+	1	14
	+	1	13
	+	1	11
	+	1	12
	+	1	14
	+	1	12
	+	1	11
	+	1	16
	+	1	12
	+	1	14
	+	1	11
	+	1	16
	+	1	12
	+	1	32
	+	1	12
	+	1	14
	+	1	12
	+	132	63
	+	11	39

> ~/mapreduce_se
	*	1751046366	0
	"	1	0

> ~/mapreduce_Se
	*	1751042850	0
	"	1	0
